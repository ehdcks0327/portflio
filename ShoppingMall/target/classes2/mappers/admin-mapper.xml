<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.AdminDAO">  
 	<resultMap type="QnA_Post" id="QnA_Post">
 		<result property="no" column="no"/>
 		<result property="que_id" column="que_id"/>
 		<result property="u_id" column="u_id"/>
 		<result property="que_secret" column="que_secret"/>
 		<result property="que_title" column="que_title"/>
 		<result property="que_text" column="que_text"/>
 		<result property="que_date" column="que_date"/>
 		<result property="que_check" column="que_check"/>
 	</resultMap>
 	
 	 <resultMap type="User" id="User">
 		<result property="u_accound" column="u_account"/>
 		<result property="u_password" column="u_pw"/>
 		<result property="authorities" column="u_role"/>
 	</resultMap>
  	
 	<select id="getQnA_AllData" parameterType="int" resultMap="QnA_Post">
		SELECT * FROM qna_qesution_table WHERE que_exist = 1 ORDER BY que_id DESC limit #{nowPage}, 10;
 	</select>
 	
	<select id="getQnA_SecretPreData" parameterType="map" resultMap="QnA_Post">
		SELECT
		  @rownum:=@rownum+1 as no, target.que_id, target.que_title, target.que_date, target.que_check
		FROM (SELECT @rownum := 0) R, qna_question_table as target
		WHERE que_secret = 1 AND que_exist = 1 AND u_id = #{target_id}
		ORDER BY no DESC limit #{nowPage}, 10;
 	</select>
 	
	<select id="getQnA_publicPreData" parameterType="int" resultMap="QnA_Post">
		SELECT
		 @rownum:=@rownum+1 as no, target.que_id, target.que_title, target.que_date, target.que_check
		FROM (SELECT @rownum := 0) R, qna_question_table as target
		WHERE que_secret = 0 AND que_exist = 1
		ORDER BY no DESC limit #{nowPage}, 10;
 	</select> 
 	
 	<insert id="setQnA_Post" parameterType="QnA_Post">
 		INSERT INTO
  		 qna_question_table(u_id, que_secret, que_title, que_text, que_date, que_check, que_exist) 
  		VALUES(#{u_id}, #{que_secret}, #{que_title}, #{que_text}, NOW(), 0, 1};
 	</insert> 	
 	
 	<insert id="setUserRole" parameterType="map">
 		INSERT INTO
  		 user_role_table(u_id, u_role) 
  		VALUES(#{u_id}, #{uuid});
 	</insert> 	
 	
 	<update id="modifyNewUserRole" parameterType="map">
 		UPDATE user_role_table
 		  SET u_enable = 'Y'
 		  WHERE u_id = ${u_id} AND u_enable = ${uuid}; 	
 	</update>
 	
 	<insert id="setUserData" parameterType="SignUp_Data" useGeneratedKeys="true" keyProperty="u_id">
 		INSERT INTO
  		  user_table(u_account, u_nick, u_pw, u_zipcode, u_addr, u_addr_detail, u_mail, u_phone) 
  		  VALUES(#{u_account}, #{u_nick}, #{u_pw}, #{u_zipcode}, #{u_addr}, #{u_addr_detail}, #{u_mail}, #{u_phone});
 	</insert> 	
 	
 	<insert id="setUserRoleData" parameterType="map">
 		INSERT INTO
 		  user_role_table(u_id, u_role, u_enable)
 		  VALUES(#{u_id}, #{u_role}, #{u_enable});
 	</insert>
 	
 	<select id="getUserDetailById" parameterType="String" resultMap="User">
 		SELECT
 		  ut.u_account, ut.u_pw, urt.u_role
 		FROM user_table as ut INNER JOIN user_role_table as urt
 		ON ut.u_id = urt.u_id
 		WHERE u_account = #{u_account};
 	</select>
 	
 	
</mapper>
